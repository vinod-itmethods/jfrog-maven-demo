name: JFrog Maven OIDC Manual Integration

on:
  push:
    branches:
      - main

permissions:
  contents: read
  id-token: write   # Required for OIDC

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Get GitHub OIDC Token
        id: get-oidc
        run: |
          echo "🔹 Requesting GitHub OIDC Token..."
          ID_TOKEN=$(curl -sLS -H "User-Agent: actions/oidc-client" -H "Authorization: Bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
            "${ACTIONS_ID_TOKEN_REQUEST_URL}&audience=sigstore" | jq -r .value)
          echo "ID_TOKEN=${ID_TOKEN}" >> $GITHUB_ENV

      - name: Exchange OIDC Token for JFrog Access Token
        id: exchange-jfrog
        env:
          ID_TOKEN: ${{ env.ID_TOKEN }}
        run: |
          echo "🔹 Exchanging OIDC Token with JFrog..."
          RESPONSE=$(curl -s -X POST -H "Content-Type: application/json" \
            "https://artifactory.stage.0658b-techopscore.com/access/api/v1/oidc/token" \
            -d "{\"grant_type\":\"urn:ietf:params:oauth:grant-type:token-exchange\", \"subject_token_type\":\"urn:ietf:params:oauth:token-type:id_token\", \"subject_token\":\"${ID_TOKEN}\", \"provider_name\":\"github-oidc\"}")

          echo "🔹 JFrog Response: $RESPONSE"
          ACCESS_TOKEN=$(echo "$RESPONSE" | jq -r '.access_token')

          if [[ -z "$ACCESS_TOKEN" || "$ACCESS_TOKEN" == "null" ]]; then
            echo "❌ Failed to obtain JFrog Access Token"
            exit 1
          fi

          echo "::add-mask::$ACCESS_TOKEN"
          echo "ACCESS_TOKEN=${ACCESS_TOKEN}" >> $GITHUB_ENV

      - name: Set up Maven Settings
        run: |
          mkdir -p ~/.m2
          cat <<EOF > ~/.m2/settings.xml
          <settings>
            <servers>
              <server>
                <id>artifactory</id>
                <username>dummy</username>
                <password>${ACCESS_TOKEN}</password>
              </server>
            </servers>
          </settings>
          EOF

      - name: Build & Deploy to Artifactory
        run: mvn clean deploy -s ~/.m2/settings.xml
