name: JFrog Maven OIDC Integration

on:
  push:
    branches:
      - main

permissions:
  contents: read
  id-token: write   # Required for OIDC authentication

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Authenticate with JFrog via OIDC
        uses: jfrog/setup-jfrog-cli@v3
        env:
          JF_URL: https://artifactory.stage.0658b-techopscore.com
        with:
          oidc-provider-name: github-oidc
          version: latest

      - name: Exchange OIDC for Access Token
        id: exchange-token
        run: |
          echo "🔹 Getting GitHub OIDC Token..."
          ID_TOKEN=$(curl -sLS -H "User-Agent: actions/oidc-client" -H "Authorization: Bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
            "${ACTIONS_ID_TOKEN_REQUEST_URL}&audience=sigstore" | jq -r .value)
          
          echo "🔹 Exchanging with JFrog..."
          RESPONSE=$(curl -s -XPOST -H "Content-Type: application/json" \
            "https://artifactory.stage.0658b-techopscore.com/access/api/v1/oidc/token" \
            -d "{\"grant_type\": \"urn:ietf:params:oauth:grant-type:token-exchange\", \"subject_token_type\":\"urn:ietf:params:oauth:token-type:id_token\", \"subject_token\": \"${ID_TOKEN}\", \"provider_name\": \"github-oidc\"}")

          ACCESS_TOKEN=$(echo "$RESPONSE" | jq -r '.access_token')

          if [[ -z "$ACCESS_TOKEN" || "$ACCESS_TOKEN" == "null" ]]; then
            echo "❌ Failed to retrieve JFrog Access Token"
            exit 1
          fi

          echo "::add-mask::$ACCESS_TOKEN"
          echo "ACCESS_TOKEN=$ACCESS_TOKEN" >> $GITHUB_ENV
          echo "✅ JFrog Access Token retrieved successfully."

      - name: Set up Maven Settings for Deployment
        run: |
          mkdir -p ~/.m2
          cat <<EOF > ~/.m2/settings.xml
          <settings>
            <servers>
              <server>
                <id>artifactory</id>
                <username>dummy</username>
                <password>${ACCESS_TOKEN}</password>
              </server>
            </servers>
          </settings>
          EOF

      - name: Build and Deploy to Artifactory
        run: mvn clean deploy -s ~/.m2/settings.xml
